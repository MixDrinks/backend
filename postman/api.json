{
	"info": {
		"_postman_id": "ab5bfe02-136f-42f6-b320-269eb28b531a",
		"name": "MixDrinks",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1080447"
	},
	"item": [
		{
			"name": "Filters",
			"item": [
				{
					"name": "Slugs",
					"item": [
						{
							"name": "Tag slug",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify cocktail count of filter\", function() {",
											"    var json = pm.response.json();",
											"    pm.expect(json.totalCount).to.eql(1);",
											"})",
											"",
											"pm.test(\"Verify cocktail id and slug are correct\", function() {",
											"    var json = pm.response.json();",
											"    pm.expect(json.cocktails[0].id).to.eql(1);",
											"    pm.expect(json.cocktails[0].slug).to.eql(\"cocktail_1\");",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SCHEME}}://{{HOST}}/v2/filter/tags=tag_1",
									"protocol": "{{SCHEME}}",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v2",
										"filter",
										"tags=tag_1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tag + Taste slug",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify cocktail count of filter\", function() {",
											"    var json = pm.response.json();",
											"    pm.expect(json.totalCount).to.eql(1);",
											"})",
											"",
											"pm.test(\"Verify cocktail id and slug are correct\", function() {",
											"    var json = pm.response.json();",
											"    pm.expect(json.cocktails[0].id).to.eql(1);",
											"    pm.expect(json.cocktails[0].slug).to.eql(\"cocktail_1\");",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SCHEME}}://{{HOST}}/v2/filter/tags=tag_1/taste=taste_1",
									"protocol": "{{SCHEME}}",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v2",
										"filter",
										"tags=tag_1",
										"taste=taste_1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Empty filters",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Verify cocktail count of filter\", function() {",
									"    var json = pm.response.json();",
									"    pm.expect(json.totalCount).to.eql(2);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SCHEME}}://{{HOST}}/v2/search/cocktails",
							"protocol": "{{SCHEME}}",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"v2",
								"search",
								"cocktails"
							]
						}
					},
					"response": []
				},
				{
					"name": "Filter with tag filter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Verify cocktail count of filter\", function() {",
									"    var json = pm.response.json();",
									"    pm.expect(json.totalCount).to.eql(1);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SCHEME}}://{{HOST}}/v2/search/cocktails?tags=1",
							"protocol": "{{SCHEME}}",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"v2",
								"search",
								"cocktails"
							],
							"query": [
								{
									"key": "tags",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Filter with tag filter Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Verify cocktail count of filter\", function() {",
									"    var json = pm.response.json();",
									"    pm.expect(json.totalCount).to.eql(1);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SCHEME}}://{{HOST}}/v2/search/cocktails?tags=1",
							"protocol": "{{SCHEME}}",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"v2",
								"search",
								"cocktails"
							],
							"query": [
								{
									"key": "tags",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all filters Copy",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SCHEME}}://{{HOST}}/v2/filters",
							"protocol": "{{SCHEME}}",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"v2",
								"filters"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Items",
			"item": [
				{
					"name": "Get tool",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var tool = pm.response.json();",
									"",
									"pm.test(\"Verify id\", function () {",
									"    pm.expect(tool.id).to.eql(1);",
									"    pm.expect(tool.name).to.eql(\"Tool1\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SCHEME}}://{{HOST}}/v2/tool/1",
							"protocol": "{{SCHEME}}",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"v2",
								"tool",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get good",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var good = pm.response.json();",
									"",
									"pm.test(\"Verify good\", function () {",
									"    pm.expect(good.id).to.eql(1);",
									"    pm.expect(good.name).to.eql(\"Good1\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SCHEME}}://{{HOST}}/v2/good/1",
							"protocol": "{{SCHEME}}",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"v2",
								"good",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get glassware",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var glassware = pm.response.json();",
									"",
									"pm.test(\"Verify good\", function () {",
									"    pm.expect(glassware.id).to.eql(100);",
									"    pm.expect(glassware.name).to.eql(\"Glassware1\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SCHEME}}://{{HOST}}/v2/glassware/100",
							"protocol": "{{SCHEME}}",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"v2",
								"glassware",
								"100"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Service endpoints",
			"item": [
				{
					"name": "robots txt",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.eq(\"User-agent: *\\nDisallow: /\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SCHEME}}://{{HOST}}/robots.txt",
							"protocol": "{{SCHEME}}",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"robots.txt"
							]
						}
					},
					"response": []
				},
				{
					"name": "Version",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SCHEME}}://{{HOST}}/version",
							"protocol": "{{SCHEME}}",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"version"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get all cocktails",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Verify json\", function () {",
							"    var cocktail = pm.response.json()[0];",
							"    pm.expect(cocktail.name).to.eql(\"Cocktail1\");",
							"    pm.expect(cocktail.id).to.eql(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{SCHEME}}://{{HOST}}/cocktails/all",
					"protocol": "{{SCHEME}}",
					"host": [
						"{{HOST}}"
					],
					"path": [
						"cocktails",
						"all"
					]
				}
			},
			"response": []
		},
		{
			"name": "Full cocktail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var cocktail = pm.response.json();",
							"",
							"pm.test(\"Verify id\", function () {",
							"    pm.expect(cocktail.id).to.eql(1);",
							"});",
							"",
							"pm.test(\"Verify name\", function () {",
							"    pm.expect(cocktail.name).to.eql(\"Cocktail1\");",
							"});",
							"",
							"pm.test(\"Verify receipt\", function () {",
							"    receipt = [\"1\", \"2\", \"3\"]",
							"    pm.expect(cocktail.receipt).to.eql(receipt)",
							"});",
							"",
							"pm.test(\"Verify first tool is glassware\", function () {",
							"    pm.expect(cocktail.tools[0].name).to.eql(\"Glassware1\")",
							"    pm.expect(cocktail.tools[0].url).to.eql(\"glassware/100\")",
							"});",
							"",
							"pm.test(\"Verify second tools is tool\", function() {",
							"    pm.expect(cocktail.tools[1].name).to.eql(\"Tool1\")",
							"    pm.expect(cocktail.tools[1].url).to.eql(\"tools/1\")",
							"})",
							"",
							"pm.test(\"Verify cocktail slug\", function(){",
							"    pm.expect(cocktail.slug).to.eql(\"cocktail_1\")",
							"})",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{SCHEME}}://{{HOST}}/v2/cocktails/full?id=1",
					"protocol": "{{SCHEME}}",
					"host": [
						"{{HOST}}"
					],
					"path": [
						"v2",
						"cocktails",
						"full"
					],
					"query": [
						{
							"key": "id",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get meta info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Verify tools\", function () {",
							"    var jsonData = pm.response.json();",
							"    let tools = jsonData.filter(a => a.queryName === \"tools\")",
							"    pm.expect(tools[0].id).to.eql(2)",
							"});",
							"",
							"pm.test(\"Verify tool items count\", function () {",
							"    var jsonData = pm.response.json();",
							"    let tools = jsonData.filter(a => a.queryName === \"tools\")",
							"    pm.expect(tools[0].items[0].cocktailCount).to.eql(1)",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{SCHEME}}://{{HOST}}/v2/filters",
					"protocol": "{{SCHEME}}",
					"host": [
						"{{HOST}}"
					],
					"path": [
						"v2",
						"filters"
					]
				}
			},
			"response": []
		},
		{
			"name": "Snapshot",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{SCHEME}}://{{HOST}}/snapshot",
					"protocol": "{{SCHEME}}",
					"host": [
						"{{HOST}}"
					],
					"path": [
						"snapshot"
					]
				}
			},
			"response": [
				{
					"name": "New Request",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SCHEME}}://{{HOST}}/snapshot",
							"protocol": "{{SCHEME}}",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"snapshot"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Content-Length",
							"value": "1268"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "{\n    \"cocktails\": [\n        {\n            \"id\": 1,\n            \"name\": \"Cocktail1\",\n            \"receipt\": [\n                \"1\",\n                \"2\",\n                \"3\"\n            ],\n            \"goods\": [\n                {\n                    \"goodId\": 1,\n                    \"amount\": 1,\n                    \"unit\": \"ml\"\n                }\n            ],\n            \"tools\": [\n                1\n            ],\n            \"tags\": [\n                1\n            ],\n            \"tastes\": [\n                1\n            ],\n            \"glassware\": 100\n        },\n        {\n            \"id\": 2,\n            \"name\": \"Cocktail2\",\n            \"receipt\": [\n                \"1_1\",\n                \"2_2\",\n                \"3_3\"\n            ],\n            \"goods\": [],\n            \"tools\": [],\n            \"tags\": [],\n            \"tastes\": [],\n            \"glassware\": 100\n        }\n    ],\n    \"tools\": [\n        {\n            \"id\": 1,\n            \"name\": \"Tool1\",\n            \"about\": \"About1\"\n        },\n        {\n            \"id\": 2,\n            \"name\": \"Tool2\",\n            \"about\": \"About2\"\n        }\n    ],\n    \"goods\": [\n        {\n            \"id\": 1,\n            \"name\": \"Good1\",\n            \"about\": \"About1\"\n        }\n    ],\n    \"tags\": [\n        {\n            \"id\": 1,\n            \"name\": \"Tag1\"\n        }\n    ],\n    \"tastes\": [\n        {\n            \"id\": 1,\n            \"name\": \"Taste1\"\n        }\n    ],\n    \"filterGroups\": [\n        {\n            \"id\": 4,\n            \"name\": \"ALCOHOL_VOLUME\",\n            \"filters\": [\n                {\n                    \"id\": 1,\n                    \"name\": \"AlcoholVolume1\",\n                    \"cocktailIds\": [\n                        1\n                    ]\n                }\n            ],\n            \"selectionType\": \"SINGLE\"\n        },\n        {\n            \"id\": 3,\n            \"name\": \"TASTE\",\n            \"filters\": [\n                {\n                    \"id\": 1,\n                    \"name\": \"Taste1\",\n                    \"cocktailIds\": [\n                        1\n                    ]\n                }\n            ],\n            \"selectionType\": \"MULTIPLE\"\n        },\n        {\n            \"id\": 5,\n            \"name\": \"GLASSWARE\",\n            \"filters\": [\n                {\n                    \"id\": 100,\n                    \"name\": \"Glassware1\",\n                    \"cocktailIds\": [\n                        1\n                    ]\n                }\n            ],\n            \"selectionType\": \"SINGLE\"\n        },\n        {\n            \"id\": 1,\n            \"name\": \"GOODS\",\n            \"filters\": [\n                {\n                    \"id\": 1,\n                    \"name\": \"Good1\",\n                    \"cocktailIds\": [\n                        1\n                    ]\n                }\n            ],\n            \"selectionType\": \"MULTIPLE\"\n        },\n        {\n            \"id\": 0,\n            \"name\": \"TAGS\",\n            \"filters\": [\n                {\n                    \"id\": 1,\n                    \"name\": \"Tag1\",\n                    \"cocktailIds\": [\n                        1\n                    ]\n                }\n            ],\n            \"selectionType\": \"MULTIPLE\"\n        },\n        {\n            \"id\": 2,\n            \"name\": \"TOOLS\",\n            \"filters\": [\n                {\n                    \"id\": 1,\n                    \"name\": \"Tool1\",\n                    \"cocktailIds\": [\n                        1\n                    ]\n                },\n                {\n                    \"id\": 2,\n                    \"name\": \"Tool2\",\n                    \"cocktailIds\": []\n                }\n            ],\n            \"selectionType\": \"MULTIPLE\"\n        }\n    ],\n    \"glassware\": [\n        {\n            \"id\": 100,\n            \"name\": \"Glassware1\",\n            \"about\": \"About1\"\n        }\n    ]\n}"
				}
			]
		}
	]
}