{
	"info": {
		"_postman_id": "ab5bfe02-136f-42f6-b320-269eb28b531a",
		"name": "MixDrinks",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1080447"
	},
	"item": [
		{
			"name": "Filters",
			"item": [
				{
					"name": "Empty filters",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Verify cocktail count of filter\", function() {",
									"    var json = pm.response.json();",
									"    pm.expect(json.totalCount).to.eql(2);  ",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SCHEME}}://{{HOST}}/v2/search/cocktails",
							"protocol": "{{SCHEME}}",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"v2",
								"search",
								"cocktails"
							]
						}
					},
					"response": []
				},
				{
					"name": "Filter with tag filter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Verify cocktail count of filter\", function() {",
									"    var json = pm.response.json();",
									"    pm.expect(json.totalCount).to.eql(1);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SCHEME}}://{{HOST}}/v2/search/cocktails?tags=1",
							"protocol": "{{SCHEME}}",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"v2",
								"search",
								"cocktails"
							],
							"query": [
								{
									"key": "tags",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get all cocktails",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Verify json\", function () {",
							"    var cocktail = pm.response.json()[0];",
							"    pm.expect(cocktail.name).to.eql(\"Cocktail1\");",
							"    pm.expect(cocktail.id).to.eql(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{SCHEME}}://{{HOST}}/cocktails/all",
					"protocol": "{{SCHEME}}",
					"host": [
						"{{HOST}}"
					],
					"path": [
						"cocktails",
						"all"
					]
				}
			},
			"response": []
		},
		{
			"name": "Full cocktail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Verify json\", function () {",
							"    var cocktail = pm.response.json();",
							"    pm.expect(cocktail.id).to.eql(1);",
							"    pm.expect(cocktail.name).to.eql(\"Cocktail1\");",
							"",
							"    receipt = [\"1\", \"2\", \"3\"]",
							"",
							"    pm.expect(cocktail.receipt).to.eql(receipt)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{SCHEME}}://{{HOST}}/v2/cocktails/full?id=1",
					"protocol": "{{SCHEME}}",
					"host": [
						"{{HOST}}"
					],
					"path": [
						"v2",
						"cocktails",
						"full"
					],
					"query": [
						{
							"key": "id",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get meta info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Verify tools\", function () {",
							"    var jsonData = pm.response.json();",
							"    let tools = jsonData.filter(a => a.queryName === \"tools\")",
							"    pm.expect(tools[0].id).to.eql(2)",
							"});",
							"",
							"pm.test(\"Verify tool items count\", function () {",
							"    var jsonData = pm.response.json();",
							"    let tools = jsonData.filter(a => a.queryName === \"tools\")",
							"    pm.expect(tools[0].items[0].cocktailCount).to.eql(1)",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{SCHEME}}://{{HOST}}/v2/filters",
					"protocol": "{{SCHEME}}",
					"host": [
						"{{HOST}}"
					],
					"path": [
						"v2",
						"filters"
					]
				}
			},
			"response": []
		}
	]
}